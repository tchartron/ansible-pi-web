---
# Later maybe add repositories if possible to have the latest version (https://downloads.mariadb.org/mariadb/repositories/#mirror=ovh)
# - name: Add PPA Repository
#   become: yes
#   become_method: sudo
#   apt_repository: repo={{ mariadb_ppa }}

# - name: Apt update
#   become: yes
#   become_method: sudo
#   apt: update_cache=yes

- name: Install MariaDB
  become: yes
  become_method: sudo
  apt: name=mariadb-server state=latest

# - name: Install PHP Packages
#   become: yes
#   become_method: sudo
#   apt: name={{ item }} state=latest
#   with_items: "{{ php_packages }}"
#   when: php_packages is defined
#   notify:
#     - restart php-fpm


- name: Running secure installation of mariadb
  become: yes
  become_method: sudo
  shell: mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql

- name: Start and enable mariadb
  become: yes
  become_method: sudo
  service: name=mariadb state=started enabled=yes

  # Configuration secure installation
  # Reproducing sudo mysql_secure_installation
  # See https://stackoverflow.com/questions/25136498/ansible-answers-to-mysql-secure-installation
  #
  #Set root password
  - name: Sets the root password
    mysql_user: user=root password="{{ mysql_root_password }}" host=localhost

  #Remove anonymous users
  - name: Deletes anonymous MySQL server user for ansible_fqdn
    # mysql_user: user="" host="{{ ansible_fqdn }}" state="absent"
    mysql_user: user="" host_all=yes state="absent"

  # - name: Deletes anonymous MySQL server user for localhost
  #   mysql_user: user="" state="absent"

  #Remove root remote access
  - name: Secures the MySQL root user for IPV6 localhost (::1)
    mysql_user: user="root" password="{{ mysql_root_password }}" host="::1"

  - name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
    mysql_user: user="root" password="{{ mysql_root_password }}" host="127.0.0.1"

  - name: Secures the MySQL root user for localhost domain (localhost)
    mysql_user: user="root" password="{{ mysql_root_password }}" host="localhost"

  - name: Secures the MySQL root user for server_hostname domain
    mysql_user: user="root" password="{{ mysql_root_password }}" host="{{ ansible_fqdn }}"

  #Remove the test database
  - name: Removes the MySQL test database
    mysql_db: db=test state=absent
