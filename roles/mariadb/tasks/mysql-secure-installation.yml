
# By default mariadb root user authenticate via unix_socket and not password
# see https://mariadb.com/kb/en/library/authentication-plugin-unix-socket/
# Allowing password auth for root user
- name: Allowing password auth for root user
  become: yes
  become_method: sudo
  command: 'mariadb -ne "{{ item }}"'
  with_items:
    - ALTER USER {{ mariadb_root_username }}@localhost IDENTIFIED VIA mysql_native_password;
    - SET PASSWORD = PASSWORD('{{ mariadb_root_password }}');
  changed_when: False

  #Set root password
- name: Set root Password
  mysql_user: login_password={{ mariadb_root_password }} check_implicit_admin=yes name=root host={{ item }} password={{ mariadb_root_password }} state=present
  with_items:
    - localhost
    - 127.0.0.1
    - ::1

- name: Reload privilege tables
  command: 'mariadb -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False

  #Remove anonymous users
# - name: Deletes anonymous MySQL server user for ansible_fqdn
#   mysql_user: login_user="{{ mariadb_root_username }}" login_password="{{ mariadb_root_password }}" user="" host_all=yes state=absent

# SQL way
- name: Remove anonymous users
  command: 'mariadb -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User=''
  changed_when: False


  #Remove root remote access
# - name: Secures the MySQL root user for IPV6 localhost (::1)
#   mysql_user: user="root" password="{{ mariadb_root_password }}" host="::1"

# - name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
#   mysql_user: user="root" password="{{ mariadb_root_password }}" host="127.0.0.1"

# - name: Secures the MySQL root user for localhost domain (localhost)
#   mysql_user: user="root" password="{{ mariadb_root_password }}" host="localhost"

# - name: Secures the MySQL root user for server_hostname domain
#   mysql_user: user="root" password="{{ mariadb_root_password }}" host="{{ ansible_fqdn }}"

# SQL way
- name: Disallow root login remotely
  command: 'mariadb -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='{{ mariadb_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: False

  #Remove the test database
- name: Removes the MySQL test database
  mysql_db: name=test state=absent

# SQL way
# - name: Remove test database and access to it
#   command: 'mariadb -ne "{{ item }}"'
#   with_items:
#     - DROP DATABASE IF EXISTS test
#     - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
#   changed_when: False

