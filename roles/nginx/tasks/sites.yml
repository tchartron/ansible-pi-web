---
- name: Create user working folder
  file: path=/home/{{ user }}/www/{{ item.domain }} state=directory owner={{ user }} group={{ user }}
  when: item.repo is undefined

- name: Repo is defined starting to deploy app from {{ item.repo }}
  become: yes
  become_method: sudo
  include: deploy.yml
  with_items: "{{ domains }}"
  loop_control:
    loop_var: deploy_item
  when: item.repo is defined

- name: Symlink to www
  become: yes
  become_method: sudo
  file: src=/home/{{ user }}/www/{{ item.domain }} dest=/var/www/{{ item.domain }} state=link

- name: Nginx server block
  become: yes
  become_method: sudo
  template: src=templates/nginx.j2 dest=/etc/nginx/sites-available/{{ item.domain }} force=yes
  notify: restart nginx

- name: Activate domain {{ item.domain }}
  become: yes
  become_method: sudo
  file: src=/etc/nginx/sites-available/{{ item.domain }} dest=/etc/nginx/sites-enabled/{{ item.domain }} state=link
  notify: restart nginx

# Can't do this on local machine it will do it on connected host .... see later if it's possible ...
# - name: Editing local hosts file to go to server (we'll see to use the dns to register the domain later)
#   lineinfile: path=/etc/hosts line={{ hostvars['web'].ansible_host }}
#     path: /etc/hosts
#     #regexp: '^127\.0\.0\.1'
#     line: '127.0.0.1 localhost'
#     owner: root
#     group: root
#     mode: 0644

